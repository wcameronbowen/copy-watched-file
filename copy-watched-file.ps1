
# Set variables for drive map if needing to pass credentials for SMB share
    $drivemap   = "destination-path" #note do not put a trailing slash here, breaks -persist option later
    $username = "someuser"
    $password = ConvertTo-SecureString "somepassword" -AsPlainText -Force
    $mycreds = New-Object System.Management.Automation.PSCredential($username, $password)

# Set file watch variables
    $filewatcher = New-Object System.IO.FileSystemWatcher
    $filewatcher.path = "somefolder"
    $filewatcher.Filter = "*.*"
    $filewatcher.IncludeSubdirectories = $true
    $filewatcher.EnableRaisingEvents = $true  

    $sourcepath = $filewatcher.path + $filewatcher.filter
    $destinationpath = "somedestination"
    $destinationmap = "J:\" + $filewatcher.filter

# Set action when events are triggered 
    $writeaction = { $path = $Event.SourceEventArgs.FullPath
                     $changeType = $Event.SourceEventArgs.ChangeType
                     $logline = "$(Get-Date), $changeType, $path"
                     Add-Content -Path "C:\temp\logs\file-watcher.txt" -value $logline
                     New-PSDrive -Name J -PSProvider FileSystem -Root $drivemap -Credential $mycreds -Persist
                     Copy-Item -Path $sourcepath -Destination $destinationmap -Force
                     Remove-PSDrive -Name J
                     
                   }    

# Which events to watch?
 
#The Register-ObjectEvent cmdlet subscribes to events that are generated by .NET objects on the local computer or on a remote computer.
#When the subscribed event is raised, it is added to the event queue in your session. To get events in the event queue, use the Get-Event cmdlet.
#Use Unregister-Event -SubscriptionId ? to remove subscription
    Register-ObjectEvent $filewatcher "Created" -Action $writeaction
    Register-ObjectEvent $filewatcher "Changed" -Action $writeaction
    Register-ObjectEvent $filewatcher "Deleted" -Action $writeaction
    Register-ObjectEvent $filewatcher "Renamed" -Action $writeaction
    
